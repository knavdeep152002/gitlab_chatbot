"""add injection tables

Revision ID: c0a7655b9ff1
Revises: 
Create Date: 2025-07-06 01:52:41.385572

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from pgvector.sqlalchemy import VECTOR

# revision identifiers, used by Alembic.
revision: str = 'c0a7655b9ff1'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('checkpoints',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('commit_id', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.Text(), nullable=False),
    sa.Column('state', sa.String(length=50), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('last_updated', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('commit_id', 'file_path', name='uq_commit_file')
    )
    op.create_index('idx_checkpoint_state', 'checkpoints', ['state'], unique=False)
    op.create_table('commit_tracker',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.String(length=255), nullable=False),
    sa.Column('last_commit_id', sa.String(length=255), nullable=False),
    sa.Column('last_commit_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('project_id')
    )
    op.create_table('documents',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('collection_id', sa.String(length=100), nullable=False),
    sa.Column('source', sa.String(length=2048), nullable=False),
    sa.Column('chunk_index', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('content_vector', VECTOR(dim=1536), nullable=True),
    sa.Column('content_tsv', postgresql.TSVECTOR(), nullable=True),
    sa.Column('document_metadata', sa.JSON(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('source', 'chunk_index', name='uq_source_chunk')
    )
    op.create_index('idx_tsv_search', 'documents', ['content_tsv'], unique=False, postgresql_using='gin')
    op.create_index('idx_vector_search', 'documents', ['content_vector'], unique=False, postgresql_using='ivfflat')
    op.create_index(op.f('ix_documents_collection_id'), 'documents', ['collection_id'], unique=False)
    op.create_index(op.f('ix_documents_source'), 'documents', ['source'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_documents_source'), table_name='documents')
    op.drop_index(op.f('ix_documents_collection_id'), table_name='documents')
    op.drop_index('idx_vector_search', table_name='documents', postgresql_using='ivfflat')
    op.drop_index('idx_tsv_search', table_name='documents', postgresql_using='gin')
    op.drop_table('documents')
    op.drop_table('commit_tracker')
    op.drop_index('idx_checkpoint_state', table_name='checkpoints')
    op.drop_table('checkpoints')
    # ### end Alembic commands ###
